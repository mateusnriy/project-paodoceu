datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PerfilUsuario {
  ADMINISTRADOR
  ATENDENTE
}

enum StatusPedido {
  PENDENTE
  PRONTO
  ENTREGUE
  CANCELADO
}

enum MetodoPagamento {
  DINHEIRO
  CARTAO_CREDITO
  CARTAO_DEBITO
  PIX
}

model Usuario {
  id            String        @id @default(uuid())
  nome          String
  email         String        @unique // <<< CORREIDO (Mesma linha)
  senha         String
  // Alterar o default aqui
  perfil        PerfilUsuario @default(ADMINISTRADOR) // <<< ALTERADO de ATENDENTE para ADMINISTRADOR
  ativo         Boolean       @default(true)
  criado_em     DateTime      @default(now())
  atualizado_em DateTime      @updatedAt
  pedidos       Pedido[]

  @@map("usuarios")
}

model Categoria {
  id            String    @id @default(uuid()) // <<< CORREIDO (Mesma linha)
  nome          String    @unique
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  produtos      Produto[]

  @@map("categorias")
}

model Produto {
  id            String       @id @default(uuid())
  nome          String
  descricao     String?
  preco         Float // <<< CORREIDO (Removido )
  estoque       Int          @default(0)
  imagem_url    String?
  ativo         Boolean      @default(true) // <<< Adicionado da correção anterior
  categoria_id  String // <<< CORREIDO (Removido )
  criado_em     DateTime     @default(now())
  atualizado_em DateTime     @updatedAt
  categoria     Categoria    @relation(fields: [categoria_id], references: [id])
  itens_pedido  ItemPedido[]

  @@map("produtos")
}

model Pedido {
  id                    String       @id @default(uuid())
  numero_sequencial_dia Int
  valor_total           Float
  cliente_nome          String? // <<< CORREIDO (Mesma linha)
  status                StatusPedido @default(PENDENTE)
  criado_em             DateTime     @default(now())
  atualizado_em         DateTime     @updatedAt
  atendente_id          String?
  atendente             Usuario?     @relation(fields: [atendente_id], references: [id]) // <<< CORREIDO (Mesma linha)
  itens                 ItemPedido[]
  pagamento             Pagamento?

  @@map("pedidos") // <<< CORREIDO (Removido )
}

model ItemPedido {
  id             String  @id @default(uuid())
  pedido_id      String
  produto_id     String
  quantidade     Int
  preco_unitario Float
  subtotal       Float
  pedido         Pedido  @relation(fields: [pedido_id], references: [id])
  produto        Produto @relation(fields: [produto_id], references: [id])

  @@map("itens_pedido")
}

model Pagamento {
  id            String          @id @default(uuid()) // <<< CORREIDO (Mesma linha)
  pedido_id     String          @unique
  metodo        MetodoPagamento
  valor_pago    Float
  troco         Float           @default(0)
  criado_em     DateTime        @default(now())
  pedido        Pedido          @relation(fields: [pedido_id], references: [id])

  @@map("pagamentos")
}
